;
; Macros to make it easier to use certain operations.
;
; XSWI <swi>, <regs>*
;   - invoke a SWI passing in explicit registers
;     register parameter can take the form:
;       r<0-15> - an explicit register (registers are assigned in ascending order)
;       ^<symbol> - pointer to a symbol (short ADR range)
;       ^^<symbol> - pointer to a symbol (long ADR range)
;       $<string> - a string to use as a pointer
;       '<char>' - a character
;       #<value> - a value, using literal pool for the value
;       <value> - a value, using MOV if possible, or literal pool if not
;
; XBL <label>, <regs>*
;   - call a label passing in explicit registers
;
; Push <reglist>, <condition>
;   - push a register list on to the stack
;
; Pull <reglist>, <condition>
;   - pull registers off the stack
;
; SETV
;   - set the v flag
;
; SIGNATURE
;   - function signature embedding
;

; -------------------------------------------------
        MACRO
$label  Push    $reglist

        LCLS    rest
        LCLS    last
last    SETS    "$reglist" :REGLISTRIGHT: 2
rest    SETS    "$reglist" :REGLISTTRIM: 2
    [ ("$last" :REGLISTTRIM: 1) = ""
$label  STR     $last, [sp, #-16]!
    |
$label  STP     $last, [sp, #-16]!
    ]
    [ "$rest" != ""
        Push    "$rest"
    ]
        MEND

; -------------------------------------------------
        MACRO
$label  Pull    $reglist

        LCLS    rest
        LCLS    last
last    SETS    "$reglist" :REGLISTRIGHT: 2
rest    SETS    "$reglist" :REGLISTTRIM: 2

    [ "$rest" != ""
        Pull    "$rest"
    |
$label
    ]
    [ ("$last" :REGLISTTRIM: 1) = ""
        LDR     $last, [sp], #16
    |
        LDP     $last, [sp], #16
    ]
        MEND

; -------------------------------------------------
        GBLS    entry_reglist
        MACRO
$label  Entry   $reglist
entry_reglist SETS "$reglist"
$label  Push    "x29, lr"
        MOV     x29, sp
    [ "$reglist" != ""
        Push    "$reglist"
    ]
        MEND

; -------------------------------------------------
        MACRO
$label  EXIT
    [ "$entry_reglist" = ""
$label  Pull    "x29, lr"
    |
$label  Pull    "$entry_reglist, x29, lr"
    ]
        RET
        MEND

; -------------------------------------------------
        MACRO
$label  SIGNATURE
        ALIGN   4
        =       "$label",0
        ALIGN   4
        DCD     &FF000000+(:LEN:"$label"+4):AND::NOT:3
$label
        MEND

; -------------------------------------------------
        MACRO
$label  SETV
; FIXME: Not implemented yet
$label  MSR     CPSR_f, #(1<<28)
        MEND

; -------------------------------------------------
        MACRO
        XSWI_param $reg, $p
        LCLS    arg
    [ "$p" <> ""
     [ ("$p" :LEFT: 1 = "X" :LOR: "$p" :LEFT: 1 = "x") :LAND: (:LEN: "$p" < 4)
        MOV     $reg, $p
     |
      [ "$p" :LEFT: 1 = "^"
       [ "$p" :LEFT: 2 = "^^"
arg     SETS    "$p" :RIGHT: ((:LEN: "$p") - 2)
        ADRL    $reg, $arg
       |
arg     SETS    "$p" :RIGHT: ((:LEN: "$p") - 1)
        ADR     $reg, $arg
       ]
      |
       [ "$p" :LEFT: 1 = "'"
        MOV     $reg, #$p
       |
        [ "$p" :LEFT: 1 = "$"
        ADR     $reg, %FA10
        B       %FA20
10
        = "$p" :RIGHT: ((:LEN: "$p") - 1), 0
        ALIGN
20
        |
         [ "$p" :LEFT: 1 = "#"
arg     SETS    "$p" :RIGHT: ((:LEN: "$p") - 1)
        LDR     $reg, =$arg
         |
          [ ($p) < 256
        MOV     $reg, #$p
          |
        LDR     $reg, =$p
          ]
         ]
        ]
       ]
      ]
     ]
    ]
        MEND

        MACRO
        XSWI    $swi, $p0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9
        XSWI_param x0, $p0
        XSWI_param x1, $p1
        XSWI_param x2, $p2
        XSWI_param x3, $p3
        XSWI_param x4, $p4
        XSWI_param x5, $p5
        XSWI_param x6, $p6
        XSWI_param x7, $p7
        XSWI_param x8, $p8
        XSWI_param x9, $p9
        SWI     $swi
        MEND


        MACRO
        XBL     $label, $p0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9
        XSWI_param x0, $p0
        XSWI_param x1, $p1
        XSWI_param x2, $p2
        XSWI_param x3, $p3
        XSWI_param x4, $p4
        XSWI_param x5, $p5
        XSWI_param x6, $p6
        XSWI_param x7, $p7
        XSWI_param x8, $p8
        XSWI_param x9, $p9
        BL      $label
        MEND

; -------------------------------------------------
        END
